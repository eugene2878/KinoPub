//
//  BookmarkModule.swift
//  KinoPub
//
//  Created by Maksim Kolesnik on 07/03/2020.
//  Copyright (c) 2020 Maksim Kolesnik. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Combine

// MARK: - Interactor

public protocol BookmarkInteractorInput: AnyObject {
    func interact()
    func prepareToReloadData()
    func requestBookmark(id: Int, page: Int) -> AnyPublisher<[Bookmark.Item], Error>
}

public protocol BookmarkInteractorOutput: AnyObject {

}

// MARK: - Presenter

public protocol BookmarkPresenterInput: AnyObject {
    func setupWith(_ model: Bookmark)
}

public protocol BookmarkPresenterOutput: AnyObject {
    func setupInitialState()
    func finishLoading()
}

// MARK: - Router

public protocol BookmarkRouterInput: AnyObject {
    func didSelect(model: Bookmark.Item)
}

public protocol BookmarkRouterOutput: AnyObject {

}

// MARK: - View

public protocol BookmarkViewInput: AnyObject {

}

public protocol BookmarkViewOutput: AnyObject {
    var title: String? { get }
    func didTriggerViewReadyEvent()
    func requestBookmark() -> AnyPublisher<[Bookmark.Item], Never>
    func requestNextPage()
    func reloadData()
    func didSelect(model: Bookmark.Item)
}
