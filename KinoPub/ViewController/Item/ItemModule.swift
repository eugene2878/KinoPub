//
//  ItemModule.swift
//  KinoPub
//
//  Created by Maksim Kolesnik on 07/03/2020.
//  Copyright (c) 2020 Maksim Kolesnik. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Combine

// MARK: - Interactor

public protocol ItemInteractorInput: AnyObject {
    func interact()
    func requestBookmark(model: Bookmark.Item) -> AnyPublisher<Item, Never>
}

public protocol ItemInteractorOutput: AnyObject {

}

// MARK: - Presenter

public protocol ItemPresenterInput: AnyObject {
    func setupWith(_ model: Bookmark.Item)

}

public protocol ItemPresenterOutput: AnyObject {
    func setupInitialState()
}

// MARK: - Router

public protocol ItemRouterInput: AnyObject {
    func didSelect(model: Season)
}

public protocol ItemRouterOutput: AnyObject {

}

// MARK: - View

public protocol ItemViewInput: AnyObject {

}

public protocol ItemViewOutput: AnyObject {
    func didTriggerViewReadyEvent()
    func requestItem() -> AnyPublisher<Item, Never>
    func didSelect(model: Season)
}
