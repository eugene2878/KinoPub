//
//  SeasonModule.swift
//  KinoPub
//
//  Created by Maksim Kolesnik on 07/03/2020.
//  Copyright (c) 2020 Maksim Kolesnik. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Combine

// MARK: - Interactor

public protocol SeasonInteractorInput: AnyObject {
    func interact()
    func download(_ episode: Episode) -> AnyPublisher<Progress, Error>
    func requestEpisodes(_ model: Season) -> AnyPublisher<[EpisodeViewModel], Never>
}

public protocol SeasonInteractorOutput: AnyObject {

}

// MARK: - Presenter

public protocol SeasonPresenterInput: AnyObject {
    func setupWith(_ model: Season)
}

public protocol SeasonPresenterOutput: AnyObject {
    func setupInitialState()
}

// MARK: - Router

public protocol SeasonRouterInput: AnyObject {

}

public protocol SeasonRouterOutput: AnyObject {

}

// MARK: - View

public protocol SeasonViewInput: AnyObject {

}

public protocol SeasonViewOutput: AnyObject {
    func didTriggerViewReadyEvent()
    func requestEpisodes() -> AnyPublisher<[EpisodeViewModel], Never>
}
