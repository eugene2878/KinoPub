//
//  BookmarksPresenter.swift
//  KinoPub
//
//  Created by Maksim Kolesnik on 06/03/2020.
//  Copyright (c) 2020 Maksim Kolesnik. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Combine
public final class BookmarksPresenter {

    // MARK: - Private

    internal weak var view: BookmarksPresenterOutput?
    private let interactor: BookmarksInteractorInput
    private let router: BookmarksRouterInput

    // MARK: - Initialization

    public init(interactor: BookmarksInteractorInput,
                router: BookmarksRouterInput) {
        self.interactor = interactor
        self.router = router
    }

}

// MARK: - BookmarksViewOutput

extension BookmarksPresenter: BookmarksViewOutput {
    public func didSelect(model: Bookmark) {
        self.router.didSelect(model: model)
    }

    public func requestBookmarks() -> AnyPublisher<[Bookmark], Never> {
        return interactor.requestBookmarks()
    }

    public func didTriggerViewReadyEvent() {
        view?.setupInitialState()
    }

}

// MARK: - BookmarksInteractorOutput

extension BookmarksPresenter: BookmarksInteractorOutput {

}

// MARK: - BookmarksRouterOutput

extension BookmarksPresenter: BookmarksRouterOutput {

}
